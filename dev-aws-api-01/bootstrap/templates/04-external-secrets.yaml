apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.names.external_secrets}}
  namespace: {{ .Values.names.argocd}}
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.project }}

  destination:
    server: {{ .Values.cluster }}
    namespace: {{ .Values.names.external_secrets}}

  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
    - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=true')
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.

  source:
    chart: kubernetes-external-secrets
    repoURL: https://godaddy.github.io/kubernetes-external-secrets
    targetRevision: 5.2.0

    helm:
      version: v3

      # # Extra parameters to set (same as setting through values.yaml, but these take precedence)
      parameters:
      - name: env.VAULT_ADDR
        value: http://vault.vault.svc.cluster.local:8200

      # Helm values files for overriding values in the helm chart
      # The path is relative to the spec.source.path directory defined above
      # valueFiles:
      # - values.yaml

      # Values file as block file
      # values: |
      #   controller:
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: role-tokenreview-binding-{{ .Values.names.external_secrets}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: {{ .Values.names.external_secrets}}-kubernetes-external-secrets
  namespace: {{ .Values.names.external_secrets}}
---
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: test-secret # K8s secrete will have this name
  namespace: {{ .Values.names.external_secrets}}
spec:
  backendType: vault
  vaultMountPoint: kubernetes
  # Vault's role name that was created with a command like
  # "vault write auth/kubernetes/role/<ROLE_NAME>"
  vaultRole: secret-reader
  data:
  - name: username-cluster # K8s secret's key name
    key: secret/data/sre/cluster/dev-aws-api # Vault path to a secret (~folder)
    property: username # Vault key name
  - name: password-cluster
    key: secret/data/sre/cluster/dev-aws-api
    property: password